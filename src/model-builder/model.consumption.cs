// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML;
using Microsoft.ML.Data;
using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
namespace ML_NET_Example
{
    public partial class Model
    {
        /// <summary>
        /// model input class for Model.
        /// </summary>
        #region model input class
        public class ModelInput
        {
            [ColumnName(@"Age")]
            public float Age { get; set; }

            [ColumnName(@"Weight (lbs)")]
            public float Weight__lbs_ { get; set; }

            [ColumnName(@"Feet:")]
            public float Feet_ { get; set; }

            [ColumnName(@"Inches:")]
            public float Inches_ { get; set; }

            [ColumnName(@"Gender")]
            public string Gender { get; set; }

            [ColumnName(@"On average, how many days do you workout per week?")]
            public float On_average__how_many_days_do_you_workout_per_week_ { get; set; }

            [ColumnName(@"Fitness level")]
            public string Fitness_level { get; set; }

            [ColumnName(@"Bench Press: What's the average weight you lift? (number in lbs)")]
            public float Bench_Press__What_s_the_average_weight_you_lift___number_in_lbs_ { get; set; }

            [ColumnName(@"Bench Press: How many reps do you do for the weight given above?")]
            public float Bench_Press__How_many_reps_do_you_do_for_the_weight_given_above_ { get; set; }

        }

        #endregion

        /// <summary>
        /// model output class for Model.
        /// </summary>
        #region model output class
        public class ModelOutput
        {
            [ColumnName(@"Age")]
            public float Age { get; set; }

            [ColumnName(@"Weight (lbs)")]
            public float Weight__lbs_ { get; set; }

            [ColumnName(@"Feet:")]
            public float Feet_ { get; set; }

            [ColumnName(@"Inches:")]
            public float Inches_ { get; set; }

            [ColumnName(@"Gender")]
            public float[] Gender { get; set; }

            [ColumnName(@"On average, how many days do you workout per week?")]
            public float On_average__how_many_days_do_you_workout_per_week_ { get; set; }

            [ColumnName(@"Fitness level")]
            public float[] Fitness_level { get; set; }

            [ColumnName(@"Bench Press: What's the average weight you lift? (number in lbs)")]
            public float Bench_Press__What_s_the_average_weight_you_lift___number_in_lbs_ { get; set; }

            [ColumnName(@"Bench Press: How many reps do you do for the weight given above?")]
            public float Bench_Press__How_many_reps_do_you_do_for_the_weight_given_above_ { get; set; }

            [ColumnName(@"Features")]
            public float[] Features { get; set; }

            [ColumnName(@"Score")]
            public float Score { get; set; }

        }

        #endregion

        private static string MLNetModelPath = Path.GetFullPath("model.zip");

        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);

        /// <summary>
        /// Use this method to predict on <see cref="ModelInput"/>.
        /// </summary>
        /// <param name="input">model input.</param>
        /// <returns><seealso cref=" ModelOutput"/></returns>
        public static ModelOutput Predict(ModelInput input)
        {
            var predEngine = PredictEngine.Value;
            return predEngine.Predict(input);
        }

        private static PredictionEngine<ModelInput, ModelOutput> CreatePredictEngine()
        {
            var mlContext = new MLContext();
            ITransformer mlModel = mlContext.Model.Load(MLNetModelPath, out var _);
            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);
        }
    }
}
