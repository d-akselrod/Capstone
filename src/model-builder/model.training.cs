// This file was auto-generated by ML.NET Model Builder. 
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Microsoft.ML.Data;
using Microsoft.ML.Trainers.FastTree;
using Microsoft.ML.Trainers;
using Microsoft.ML.Transforms;
using Microsoft.ML;

namespace ML_NET_Example
{
    public partial class Model
    {
        /// <summary>
        /// Retrains model using the pipeline generated as part of the training process. For more information on how to load data, see aka.ms/loaddata.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <param name="trainData"></param>
        /// <returns></returns>
        public static ITransformer RetrainPipeline(MLContext mlContext, IDataView trainData)
        {
            var pipeline = BuildPipeline(mlContext);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new[] { new InputOutputColumnPair(@"Gender", @"Gender"), new InputOutputColumnPair(@"Fitness level", @"Fitness level") }, outputKind: OneHotEncodingEstimator.OutputKind.Indicator)
                                    .Append(mlContext.Transforms.ReplaceMissingValues(new[] { new InputOutputColumnPair(@"Age", @"Age"), new InputOutputColumnPair(@"Weight (lbs)", @"Weight (lbs)"), new InputOutputColumnPair(@"Feet:", @"Feet:"), new InputOutputColumnPair(@"Inches:", @"Inches:"), new InputOutputColumnPair(@"On average, how many days do you workout per week?", @"On average, how many days do you workout per week?"), new InputOutputColumnPair(@"Bench Press: How many reps do you do for the weight given above?", @"Bench Press: How many reps do you do for the weight given above?") }))
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new[] { @"Gender", @"Fitness level", @"Age", @"Weight (lbs)", @"Feet:", @"Inches:", @"On average, how many days do you workout per week?", @"Bench Press: How many reps do you do for the weight given above?" }))
                                    .Append(mlContext.Regression.Trainers.FastForest(new FastForestRegressionTrainer.Options() { NumberOfTrees = 4, NumberOfLeaves = 4, FeatureFraction = 1F, LabelColumnName = @"Bench Press: What's the average weight you lift? (number in lbs)", FeatureColumnName = @"Features" }));

            return pipeline;
        }
    }
}
